# Example function to determine dairy vs dairy-free
classify_ice_cream <- function(ingredients) {
dairy_keywords <- c('milk', 'cream', 'butter')
if (any(sapply(dairy_keywords, grepl, ingredients, ignore.case = TRUE))) {
return('dairy')
} else {
return('dairy-free')
}
}
# Apply the classification to the dataset
df$category <- sapply(df$ingredients, classify_ice_cream)
# Group by brand and category, then calculate the average rating
grouped <- df %>%
group_by(brand, category) %>%
summarize(average_rating = mean(rating, na.rm = TRUE))
# Convert the summary to a data frame
grouped <- as.data.frame(grouped)
# Plotting
ggplot(grouped, aes(x = RatingCount, y = AverageRating, color = Category)) +
geom_point() +
labs(title = "Rating Count vs Average Rating for Dairy and Dairy-Free Ice Creams",
x = "Rating Count",
y = "Average Rating") +
theme_minimal()
library(dplyr)
library(ggplot2)
# Load dataset
df <- read.csv('icecream_data.csv')
# Example function to determine dairy vs dairy-free
classify_ice_cream <- function(ingredients) {
dairy_keywords <- c('milk', 'cream', 'butter')
if (any(sapply(dairy_keywords, grepl, ingredients, ignore.case = TRUE))) {
return('dairy')
} else {
return('dairy-free')
}
}
# Apply the classification to the dataset
df$category <- sapply(df$ingredients, classify_ice_cream)
# Group by brand and category, then calculate the average rating
grouped <- df %>%
group_by(brand, category) %>%
summarize(average_rating = mean(rating, na.rm = TRUE))
# Convert the summary to a data frame
grouped <- as.data.frame(grouped)
# Plotting
ggplot(grouped, aes(x = RatingCount, y = average_rating, color = category)) +
geom_point() +
labs(title = "Rating Count vs Average Rating for Dairy and Dairy-Free Ice Creams",
x = "Rating Count",
y = "Average Rating") +
theme_minimal()
library(dplyr)
library(ggplot2)
# Load dataset
df <- read.csv('icecream_data.csv')
# Example function to determine dairy vs dairy-free
classify_ice_cream <- function(ingredients) {
dairy_keywords <- c('milk', 'cream', 'butter')
if (any(sapply(dairy_keywords, grepl, ingredients, ignore.case = TRUE))) {
return('dairy')
} else {
return('dairy-free')
}
}
# Apply the classification to the dataset
df$category <- sapply(df$ingredients, classify_ice_cream)
# Group by brand and category, then calculate the average rating
grouped <- df %>%
group_by(brand, category) %>%
summarize(average_rating = mean(rating, na.rm = TRUE))
# Convert the summary to a data frame
grouped <- as.data.frame(grouped)
# Plotting
ggplot(grouped, aes(x = brand, y = average_rating, color = category)) +
geom_point() +
labs(title = "Average Rating by Brand for Dairy and Dairy-Free Ice Creams",
x = "Brand",
y = "Average Rating",
color = "Category") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
df <- read.csv('icecream_data.csv')
classify_ice_cream <- function(description) {
if (grepl('dairy-free|non-dairy|sorbetto', description, ignore.case = TRUE)) {
return('dairy-free')
} else {
return('dairy')
}
}
df$category <- sapply(df$description, classify_ice_cream)
ggplot(df, aes(x = category, y = rating, fill = category)) +
geom_boxplot() +
scale_fill_manual(values = c("dairy" = "#fca9c9", "dairy-free" = "#b0f7f1")) +
labs(title = 'Distribution of Ratings for Dairy and Dairy-Free Ice Creams',
x = 'Category', y = 'Rating') +
theme_minimal()
library(dplyr)
library(ggplot2)
# Load dataset
df <- read.csv('icecream_data.csv')
# Example function to determine dairy vs dairy-free
classify_ice_cream <- function(ingredients) {
dairy_keywords <- c('milk', 'cream', 'butter')
if (any(sapply(dairy_keywords, grepl, ingredients, ignore.case = TRUE))) {
return('dairy')
} else {
return('dairy-free')
}
}
# Apply the classification to the dataset
df$category <- sapply(df$ingredients, classify_ice_cream)
rating_summary <- data %>%
mutate(Category = ifelse(grepl("dairy-free", tolower(description)), "Dairy-Free", "Dairy")) %>%
group_by(name, Category) %>%
summarise(RatingCount = n(),
AverageRating = mean(rating, na.rm = TRUE))
# Load required libraries
library(dplyr)
library(ggplot2)
# Load dataset
df <- read.csv('icecream_data.csv')
# Example function to determine dairy vs dairy-free
classify_ice_cream <- function(ingredients) {
dairy_keywords <- c('milk', 'cream', 'butter')
if (any(sapply(dairy_keywords, grepl, ingredients, ignore.case = TRUE))) {
return('dairy')
} else {
return('dairy-free')
}
}
# Apply the classification to the dataset
df$category <- sapply(df$ingredients, classify_ice_cream)
# Calculate rating count and average rating
rating_summary <- df %>%
mutate(Category = ifelse(grepl("dairy-free", tolower(description)), "Dairy-Free", "Dairy")) %>%
group_by(brand, Category) %>%
summarise(RatingCount = n(),
AverageRating = mean(rating, na.rm = TRUE))
# Plotting
ggplot(rating_summary, aes(x = brand, y = AverageRating, color = Category)) +
geom_point() +
labs(title = "Average Rating by Brand for Dairy and Dairy-Free Ice Creams",
x = "Brand",
y = "Average Rating",
color = "Category") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Load dataset
df <- read.csv('icecream_data.csv')
# Example function to determine dairy vs dairy-free
classify_ice_cream <- function(ingredients) {
dairy_keywords <- c('milk', 'cream', 'butter')
if (any(sapply(dairy_keywords, grepl, ingredients, ignore.case = TRUE))) {
return('dairy')
} else {
return('dairy-free')
}
}
# Apply the classification to the dataset
df$category <- sapply(df$ingredients, classify_ice_cream)
# Group by brand and category, then calculate the average rating
grouped <- df %>%
group_by(brand, category) %>%
summarize(average_rating = mean(rating, na.rm = TRUE))
# Convert the summary to a data frame
grouped <- as.data.frame(grouped)
# Plotting
ggplot(grouped, aes(x = brand, y = average_rating, fill = category)) +
geom_bar(stat = 'identity', position = position_dodge()) +
scale_fill_manual(values = c("dairy" = "#fca9c9", "dairy-free" = "#b0f7f1")) +
labs(title = 'Average Ratings of Dairy and Dairy-Free Ice Creams by Brand',
x = 'Ice Cream Brands', y = 'Average Rating') +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Load required libraries
library(dplyr)
library(ggplot2)
# Load dataset
df <- read.csv('icecream_data.csv')
# Example function to determine dairy vs dairy-free
classify_ice_cream <- function(ingredients) {
dairy_keywords <- c('milk', 'cream', 'butter')
if (any(sapply(dairy_keywords, grepl, ingredients, ignore.case = TRUE))) {
return('dairy')
} else {
return('dairy-free')
}
}
# Apply the classification to the dataset
df$category <- sapply(df$ingredients, classify_ice_cream)
# Calculate rating count and average rating
rating_summary <- df %>%
mutate(Category = ifelse(grepl("dairy-free", tolower(description)), "Dairy-Free", "Dairy")) %>%
group_by(brand, Category) %>%
summarise(RatingCount = n(),
AverageRating = mean(rating, na.rm = TRUE))
# Plotting
ggplot(rating_summary, aes(x = brand, y = AverageRating, color = Category)) +
geom_point() +
labs(title = "Average Rating by Brand for Dairy and Dairy-Free Ice Creams",
x = "Brand",
y = "Average Rating",
color = "Category") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Load dataset
df <- read.csv('icecream_data.csv')
# Example function to determine dairy vs dairy-free
classify_ice_cream <- function(ingredients) {
dairy_keywords <- c('milk', 'cream', 'butter')
if (any(sapply(dairy_keywords, grepl, ingredients, ignore.case = TRUE))) {
return('dairy')
} else {
return('dairy-free')
}
}
# Apply the classification to the dataset
df$category <- sapply(df$ingredients, classify_ice_cream)
# Group by brand and category, then calculate the average rating
grouped <- df %>%
group_by(brand, category) %>%
summarize(average_rating = mean(rating, na.rm = TRUE))
# Convert the summary to a data frame
grouped <- as.data.frame(grouped)
# Plotting
ggplot(grouped, aes(x = brand, y = average_rating, fill = category)) +
geom_bar(stat = 'identity', position = position_dodge()) +
scale_fill_manual(values = c("dairy" = "#fca9c9", "dairy-free" = "#b0f7f1")) +
labs(title = 'Average Ratings of Dairy and Dairy-Free Ice Creams by Brand',
x = 'Ice Cream Brands', y = 'Average Rating') +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Load required libraries
library(dplyr)
library(ggplot2)
# Load dataset
df <- read.csv('icecream_data.csv')
# Example function to determine dairy vs dairy-free
classify_ice_cream <- function(ingredients) {
dairy_keywords <- c('milk', 'cream', 'butter')
if (any(sapply(dairy_keywords, grepl, ingredients, ignore.case = TRUE))) {
return('dairy')
} else {
return('dairy-free')
}
}
# Apply the classification to the dataset
df$category <- sapply(df$ingredients, classify_ice_cream)
# Calculate rating count and average rating
rating_summary <- df %>%
mutate(Category = ifelse(grepl("dairy-free", tolower(description)), "Dairy-Free", "Dairy")) %>%
group_by(name, Category) %>%
summarise(RatingCount = rating_count[1],  # Assuming each flavor has the same rating count
AverageRating = mean(rating, na.rm = TRUE))
# Plotting scatter plot showing correlation between rating count and average rating
ggplot(rating_summary, aes(x = RatingCount, y = AverageRating)) +
geom_point() +
labs(title = "Correlation between Rating Count and Average Rating for Ice Cream Flavors",
x = "Rating Count",
y = "Average Rating")
# Load required libraries
library(dplyr)
library(ggplot2)
# Load dataset
df <- read.csv('icecream_data.csv')
# Example function to determine dairy vs dairy-free
classify_ice_cream <- function(ingredients) {
dairy_keywords <- c('milk', 'cream', 'butter')
if (any(sapply(dairy_keywords, grepl, ingredients, ignore.case = TRUE))) {
return('dairy')
} else {
return('dairy-free')
}
}
# Apply the classification to the dataset
df$category <- sapply(df$ingredients, classify_ice_cream)
# Calculate rating count and average rating
rating_summary <- df %>%
mutate(Category = ifelse(grepl("dairy-free", tolower(description)), "Dairy-Free", "Dairy")) %>%
group_by(name, Category) %>%
summarise(RatingCount = rating_count[1],  # Assuming each flavor has the same rating count
AverageRating = mean(rating, na.rm = TRUE))
# Plotting scatter plot showing correlation between rating count and average rating
ggplot(rating_summary, aes(x = RatingCount, y = AverageRating)) +
geom_point() +
scale_fill_manual(values = c("dairy" = "#fca9c9", "dairy-free" = "#b0f7f1")) +
labs(title = "Correlation between Rating Count and Average Rating for Ice Cream Flavors",
x = "Rating Count",
y = "Average Rating")
# Load required libraries
library(dplyr)
library(ggplot2)
# Load dataset
df <- read.csv('icecream_data.csv')
# Example function to determine dairy vs dairy-free
classify_ice_cream <- function(ingredients) {
dairy_keywords <- c('milk', 'cream', 'butter')
if (any(sapply(dairy_keywords, grepl, ingredients, ignore.case = TRUE))) {
return('dairy')
} else {
return('dairy-free')
}
}
# Apply the classification to the dataset
df$category <- sapply(df$ingredients, classify_ice_cream)
# Calculate rating count and average rating
rating_summary <- df %>%
mutate(Category = ifelse(grepl("dairy-free", tolower(description)), "Dairy-Free", "Dairy")) %>%
group_by(name, Category) %>%
summarise(RatingCount = rating_count[1],  # Assuming each flavor has the same rating count
AverageRating = mean(rating, na.rm = TRUE))
# Plotting scatter plot showing correlation between rating count and average rating
ggplot(rating_summary, aes(x = RatingCount, y = AverageRating, color = Category)) +
geom_point() +
scale_color_manual(values = c("dairy" = "#fca9c9", "dairy-free" = "#b0f7f1")) +
labs(title = "Correlation between Rating Count and Average Rating for Ice Cream Flavors",
x = "Rating Count",
y = "Average Rating")
# Load required libraries
library(dplyr)
library(ggplot2)
# Load dataset
df <- read.csv('icecream_data.csv')
# Example function to determine dairy vs dairy-free
classify_ice_cream <- function(ingredients) {
dairy_keywords <- c('milk', 'cream', 'butter')
if (any(sapply(dairy_keywords, grepl, ingredients, ignore.case = TRUE))) {
return('dairy')
} else {
return('dairy-free')
}
}
# Apply the classification to the dataset
df$category <- sapply(df$ingredients, classify_ice_cream)
# Calculate rating count and average rating
rating_summary <- df %>%
mutate(Category = ifelse(grepl("dairy-free", tolower(description)), "Dairy-Free", "Dairy")) %>%
group_by(name, Category) %>%
summarise(RatingCount = rating_count[1],  # Assuming each flavor has the same rating count
AverageRating = mean(rating, na.rm = TRUE))
# Plotting scatter plot showing correlation between rating count and average rating
ggplot(rating_summary, aes(x = RatingCount, y = AverageRating, color = Category)) +
geom_point() +
scale_color_manual(values = c("dairy" = "#fca9c9", "dairy-free" = "#b0f7f1")) +
labs(title = "Correlation between Rating Count and Average Rating for Ice Cream Flavors",
x = "Rating Count",
y = "Average Rating")
# Load required libraries
library(dplyr)
library(ggplot2)
# Load dataset
df <- read.csv('icecream_data.csv')
# Example function to determine dairy vs dairy-free
classify_ice_cream <- function(ingredients) {
dairy_keywords <- c('milk', 'cream', 'butter')
if (any(sapply(dairy_keywords, grepl, ingredients, ignore.case = TRUE))) {
return('dairy')
} else {
return('dairy-free')
}
}
# Apply the classification to the dataset
df$category <- sapply(df$ingredients, classify_ice_cream)
# Calculate rating count and average rating
rating_summary <- df %>%
mutate(Category = ifelse(grepl("dairy-free", tolower(description)), "Dairy-Free", "Dairy")) %>%
group_by(name, Category) %>%
summarise(RatingCount = rating_count[1],  # Assuming each flavor has the same rating count
AverageRating = mean(rating, na.rm = TRUE))
rating_summary$Category <- factor(rating_summary$Category, levels = c("dairy", "dairy-free"))
# Plotting scatter plot showing correlation between rating count and average rating
ggplot(rating_summary, aes(x = RatingCount, y = AverageRating, color = Category)) +
geom_point() +
scale_color_manual(values = c("dairy" = "#fca9c9", "dairy-free" = "#b0f7f1")) +
labs(title = "Correlation between Rating Count and Average Rating for Ice Cream Flavors",
x = "Rating Count",
y = "Average Rating")
# Load required libraries
library(dplyr)
library(ggplot2)
# Load dataset
df <- read.csv('icecream_data.csv')
# Example function to determine dairy vs dairy-free
classify_ice_cream <- function(ingredients) {
dairy_keywords <- c('milk', 'cream', 'butter')
if (any(sapply(dairy_keywords, grepl, ingredients, ignore.case = TRUE))) {
return('dairy')
} else {
return('dairy-free')
}
}
# Apply the classification to the dataset
df$category <- sapply(df$ingredients, classify_ice_cream)
# Calculate rating count and average rating
rating_summary <- df %>%
mutate(Category = ifelse(grepl("dairy-free", tolower(description)), "Dairy-Free", "Dairy")) %>%
group_by(name, Category) %>%
summarise(RatingCount = rating_count[1],  # Assuming each flavor has the same rating count
AverageRating = mean(rating, na.rm = TRUE))
rating_summary$Category <- factor(rating_summary$Category, levels = c("dairy", "dairy-free"))
# Plotting scatter plot showing correlation between rating count and average rating
ggplot(rating_summary, aes(x = RatingCount, y = AverageRating, color = Category)) +
geom_point() +
scale_color_manual(values = c("dairy" = "#fca9c9", "dairy-free" = "#b0f7f1")) +
labs(title = "Correlation between Rating Count and Average Rating for Ice Cream Flavors",
x = "Rating Count",
y = "Average Rating")
# Load required libraries
library(dplyr)
library(ggplot2)
# Load dataset
df <- read.csv('icecream_data.csv')
# Example function to determine dairy vs dairy-free
classify_ice_cream <- function(ingredients) {
dairy_keywords <- c('milk', 'cream', 'butter')
if (any(sapply(dairy_keywords, grepl, ingredients, ignore.case = TRUE))) {
return('dairy')
} else {
return('dairy-free')
}
}
# Apply the classification to the dataset
df$category <- sapply(df$ingredients, classify_ice_cream)
# Calculate rating count and average rating
rating_summary <- df %>%
mutate(Category = ifelse(grepl("dairy-free", tolower(description)), "Dairy-Free", "Dairy")) %>%
group_by(name, Category) %>%
summarise(RatingCount = rating_count[1],  # Assuming each flavor has the same rating count
AverageRating = mean(rating, na.rm = TRUE))
# Ensure that Category is a factor with correct levels
rating_summary$Category <- factor(rating_summary$Category, levels = c("dairy", "dairy-free"))
# Plotting scatter plot showing correlation between rating count and average rating
ggplot(rating_summary, aes(x = RatingCount, y = AverageRating, color = Category)) +
geom_point() +
scale_color_manual(values = c("dairy" = "#fca9c9", "dairy-free" = "#b0f7f1")) +
labs(title = "Correlation between Rating Count and Average Rating for Ice Cream Flavors",
x = "Rating Count",
y = "Average Rating")
# Load required libraries
library(dplyr)
library(ggplot2)
# Load dataset
df <- read.csv('icecream_data.csv')
# Example function to determine dairy vs dairy-free
classify_ice_cream <- function(ingredients) {
dairy_keywords <- c('milk', 'cream', 'butter')
if (any(sapply(dairy_keywords, grepl, ingredients, ignore.case = TRUE))) {
return('dairy')
} else {
return('dairy-free')
}
}
# Apply the classification to the dataset
df$category <- sapply(df$ingredients, classify_ice_cream)
# Calculate rating count and average rating
rating_summary <- df %>%
mutate(Category = ifelse(grepl("dairy-free", tolower(description)), "Dairy-Free", "Dairy")) %>%
group_by(name, Category) %>%
summarise(RatingCount = rating_count[1],  # Assuming each flavor has the same rating count
AverageRating = mean(rating, na.rm = TRUE))
# Ensure that Category is a factor with correct levels
rating_summary$Category <- factor(rating_summary$Category, levels = c("dairy", "dairy-free"))
# Plotting scatter plot showing correlation between rating count and average rating
ggplot(rating_summary, aes(x = RatingCount, y = AverageRating, color = Category)) +
geom_point() +
scale_color_manual(values = c("dairy" = "#fca9c9", "dairy-free" = "#b0f7f1")) +
labs(title = "Correlation between Rating Count and Average Rating for Ice Cream Flavors",
x = "Rating Count",
y = "Average Rating")
# The chosen scatter plot effectively illustrates the potential correlation between two critical factors:
# the popularity and satisfaction level of ice cream flavors. By plotting each flavor as a point,
# with its position determined by both its rating count and average rating, the plot offers a straightforward
# visual representation. Through this chart, we can quickly discern patterns: whether highly-rated flavors
# tend to attract more ratings or if there's no clear relationship between popularity and satisfaction.
# Ultimately, the plot provides actionable insights into consumer preferences, aiding manufacturers and
# retailers in understanding which flavors resonate most with their audience and guiding strategic decisions accordingly.
# Load required libraries
library(dplyr)
library(ggplot2)
# Load dataset
df <- read.csv('icecream_data.csv')
# Example function to determine dairy vs dairy-free
classify_ice_cream <- function(ingredients) {
dairy_keywords <- c('milk', 'cream', 'butter')
if (any(sapply(dairy_keywords, grepl, ingredients, ignore.case = TRUE))) {
return('dairy')
} else {
return('dairy-free')
}
}
# Apply the classification to the dataset
df$category <- sapply(df$ingredients, classify_ice_cream)
# Calculate rating count and average rating
rating_summary <- df %>%
mutate(Category = ifelse(grepl("dairy-free", tolower(description)), "Dairy-Free", "Dairy")) %>%
group_by(name, Category) %>%
summarise(RatingCount = rating_count[1],  # Assuming each flavor has the same rating count
AverageRating = mean(rating, na.rm = TRUE))
# Ensure that Category is a factor with correct levels
rating_summary$Category <- factor(rating_summary$Category, levels = c("dairy", "dairy-free"))
# Plotting scatter plot showing correlation between rating count and average rating
ggplot(rating_summary, aes(x = RatingCount, y = AverageRating, color = Category)) +
geom_point() +
scale_color_manual(values = c("dairy" = "#fca9c9", "dairy-free" = "#b0f7f1")) +
labs(title = "Correlation between Rating Count and Average Rating for Ice Cream Flavors",
x = "Rating Count",
y = "Average Rating")
